#!/bin/sh

source $(dirname $0)/config

err() {
    echo "$1"
    exit 1
}

usage() {
    echo "usage: notify_volume [option] [argument]"
    echo
    echo "Options:"
    echo "  +, -i, --increase  - increase volume by \`argument'"
    echo "  -, -d, --decrease  - decrease volume by \`argument'"
    echo "  !, -t, --toggle    - mute/unmute"
    echo "  -h, --help         - display this"
    exit
}

level() {
    amixer get Master | sed -n 's/^.*\[\([0-9]\+\)%.*$/\1/p' | uniq
}

state() {
    amixer get Master | sed -n 's/^.*\[\(o[nf]\+\)]$/\1/p' | uniq
}

case $1 in
    '+'|'-i'|'--increase')
        [ -z "$2" ] && err "No argument specified for increase"
        AMIXARG="${2}%+"
        ;;
    '-'|'-d'|'--decrease')
        [ -z "$2" ] && err "No argument specified for decrease"
        AMIXARG="${2}%-"
        ;;
    '!'|'-t'|'--toggle')
        AMIXARG="toggle"
        ;;
    ''|'-h'|'--help')
        usage
        ;;
    *)
        err "Unrecognized option \`$1', see notify_volume --help"
esac

amixer set Master $AMIXARG > /dev/null

if [[ `state` != "on" ]]; then
    icon="[Muted]"
elif [[ `level` -lt 30 ]]; then
    icon="[Volume]"
else
    icon="[Volume]"
fi

steps=$(echo "100/$NOTIFY_VOLUME_BAR_LENGTH" | bc)
current=$(echo "`level`/$steps" | bc)

for i in `seq 1 $NOTIFY_VOLUME_BAR_LENGTH`;
do
    if [[ `state` != "on" ]]; then
        bar+=" "
    elif [ $i -lt $current ]; then
        bar+="%{F$COLOR_URGENT}${NOTIFY_VOLUME_BAR_CHARACTER}%{F-}"
    else
        bar+="%{F$COLOR_ICON}${NOTIFY_VOLUME_BAR_CHARACTER}%{F-}"
    fi
done

$(dirname $0)/notify "%{F$COLOR_ICON}$icon%{F-} [$bar]" &
